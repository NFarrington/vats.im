language: php

env:
  global:
    - IMAGE_NAME=nfarrington/vatsim-url-shortener
    - IMAGE_VERSION=`echo $TRAVIS_BRANCH | sed -r 's/^v([[:digit:]])/\1/'`
    - IMAGE_TAG=${IMAGE_NAME}:${IMAGE_VERSION}

php:
  - '7.4'
  - nightly

addons:
  mariadb: '10.3'

install:
  - composer self-update --no-interaction
  - nvm install && nvm use
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter

before_script:
  - cp .env.travis .env
  - touch database/database.tests.sqlite
  - mysql -e 'CREATE DATABASE laravel;'
  - mysql -e 'CREATE USER IF NOT EXISTS travis@localhost;'
  - mysql -e 'GRANT ALL ON laravel.* to travis@localhost;'
  - composer install
  - php artisan key:generate --no-interaction
  - composer deploy-dev
  - ./cc-test-reporter before-build

script:
  - vendor/bin/phpunit --configuration phpunit.xml
  - vendor/bin/phpunit --configuration phpunit.mysql.xml --coverage-clover build/logs/clover.xml

after_failure:
  - cat storage/logs/laravel.log

after_script:
  - ./cc-test-reporter after-build --coverage-input-type clover --exit-code $TRAVIS_TEST_RESULT

jobs:
  allow_failures:
    - php: nightly
  include:
    - stage: Push Docker Images (amd64)
      php: '7.4'
      install: skip
      before_script: skip
      script:
        - docker build
          --build-arg "APP_COMMIT=$TRAVIS_COMMIT"
          --build-arg "APP_VERSION=$IMAGE_VERSION"
          --target nginx
          --tag ${IMAGE_TAG}-nginx .
        - docker build
          --build-arg "APP_COMMIT=$TRAVIS_COMMIT"
          --build-arg "APP_VERSION=$IMAGE_VERSION"
          --target php-fpm
          --tag ${IMAGE_TAG}-php-fpm .
      after_failure: skip
      after_script: skip
      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      deploy:
        - provider: script
          script: docker push ${IMAGE_TAG}-nginx
          on:
            all_branches: true
        - provider: script
          script: docker push ${IMAGE_TAG}-php-fpm
          on:
            all_branches: true
    - stage: Push Docker Images (arm64)
      php: '7.4'
      arch: arm64
      install: skip
      before_script: skip
      script:
        - docker build
          --build-arg "APP_COMMIT=$TRAVIS_COMMIT"
          --build-arg "APP_VERSION=$IMAGE_VERSION"
          --target nginx
          --tag ${IMAGE_TAG}-nginx-arm64 .
        - docker build
          --build-arg "APP_COMMIT=$TRAVIS_COMMIT"
          --build-arg "APP_VERSION=$IMAGE_VERSION"
          --target php-fpm
          --tag ${IMAGE_TAG}-php-fpm-arm64 .
      after_failure: skip
      after_script: skip
      before_deploy:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      deploy:
        - provider: script
          script: docker push ${IMAGE_TAG}-nginx-arm64
          on:
            all_branches: true
        - provider: script
          script: docker push ${IMAGE_TAG}-php-fpm-arm64
          on:
            all_branches: true

cache:
  directories:
    - $HOME/.composer/cache/files
    - node_modules
